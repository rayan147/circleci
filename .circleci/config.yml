version: 2.1

executors:
   app-executor:
     docker:
       - image: cimg/node:17.7.2
     working_directory: ~/repo
     
commands:
  show-current-branch:
    description: "Show current branch"
    steps:
      - run:
          name: show current branch
          command: echo $CIRCLE_BRANCH
  restore-cache:
    description: "Restore cache"
    steps:
      - restore_cache:
             keys: 
               - app-{{checksum "package.json"}}
               - app-
  install-dependencies:
    description: "Install dependencies"
    steps:
      - run:
         name: install dependencies
         command: npm install
  save-cache:
    description: "Save cache"
    steps:
      - save_cache:
          paths:
            - node_modules
          key:  app-{{checksum "package.json"}}

  installing-awscliv2:
    description: "Installing awscliv2"
    steps:
      - run:
         name: Installing AWS CLI version 2.x
         working_directory: /
         command: |
             sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
             sudo unzip awscliv2.zip 
             sudo ./aws/install
             sudo rm -rf awscliv2.zip
             sudo rm -rf aws
             aws --version
  build-app:
    description: "Build app"
    steps:
      - run:
         name: Building the application
         command: |
              npm install
              npm run build
              cd build
              zip ../build.zip -r * .[^.]*
              echo "Build successful"
  create-iam-user:
     description: "Create IAM user"
     steps:
        - run:
            name: Create IAM user
            command: |
              aws cloudformation create-stack --stack-name iamstack --template-body file://cf/iam.yaml --capabilities CAPABILITY_NAMED_IAM
  create-s3-all-policy:
      description: "Create S3 all policy"
      steps:
          - run:
              name: Create S3 all policy
              command: |
                aws cloudformation create-stack --stack-name s3-all-policy-stack --template-body file://cf/s3policy.yaml --capabilities CAPABILITY_NAMED_IAM
  create-s3buckets:
      description: "Create S3 buckets"
      steps:
        - run:
            name: Create S3 buckets
            environment:
              S3_TEMPLATE_BUCKET_NAME: s3bucketstack
            command: |
              aws cloudformation create-stack --stack-name s3bucketstack--template-body file://cf/s3buckets.yaml 
            
  create-s3bucket-policy:
      description: "Create S3 bucket policy"
      steps:
        - run:
            name: Create S3 bucket policy
            command: |
              aws cloudformation create-stack --stack-name s3bucketpolicystack --template-body file://cf/s3bucketpolicy.yaml






jobs:
  create-infrasctructure:
    executor: app-executor
    steps:
      - checkout
      - installing-awscliv2
      - create-iam-user
      - create-s3buckets
      - create-s3bucket-policy


      
  run-tests:
    description: "Run tests"
    executor: app-executor
    steps:
      - checkout
      - show-current-branch
      - install-dependencies
      - restore-cache
      - save-cache
      - run:
          name: Run tests
          command: |
            cd ~/repo
            npm run test
            echo "Tests successful"
  build:
    executor: app-executor  
    steps:
      - checkout
      - run:
          name: show code
          command: cd ~/repo && ls -ltra && git status
      - show-current-branch
      - install-dependencies
      - restore-cache
      - save-cache

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - show-current-branch
      - installing-awscliv2
      - build-app
  
      - run:
          name: Deploy to AWS S3
          command: |
            case $CIRCLE_BRANCH in
              main)
               aws --region $AWS_REGION s3 sync ~/repo/build s3://$PROD_BUCKET --delete
                ;;
              stage)
                aws --region $AWS_REGION s3 sync ~/repo/build s3://$STAGE_BUCKET --delete
                  ;;
               dev)
                aws --region $AWS_REGION s3 sync ~/repo/build s3://$DEV_BUCKET --delete
                  ;;
              *)
                echo "No bucket found for branch $CIRCLE_BRANCH"
                ;;
            esac
workflows:
  deploy-to-aws-s3:
    jobs:
      - create-infrasctructure
      - run-tests:
          requires: 
            - create-infrasctructure
      - build:
          requires: 
            - run-tests
      - deploy-to-aws-s3:
           requires:
             - run-tests
             - build
             
      
    
        